{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BackButton.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","title","frontmatter","_components_seo__WEBPACK_IMPORTED_MODULE_7__","description","excerpt","dangerouslySetInnerHTML","__html","html","className","styles","content","componentDidMount","hljs","registerLanguage","javascript","initHighlighting","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps","arrayOf","BackButton","to","react_default","gatsby_browser_entry","button","Layout","_this$props","children","isRootPath","container","components_BackButton","link"],"mappings":"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","file":"component---src-templates-blog-post-js-3b1a0d4523f7858ab705.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styles from \"./blog-post.module.css\"\nimport \"highlight.js/styles/default.css\"\nimport \"highlight.js/styles/androidstudio.css\"\nimport hljs from \"highlight.js/lib/highlight\"\nimport javascript from \"highlight.js/lib/languages/javascript\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n\n    return (\n      <Layout location={this.props.location} title={post.frontmatter.title}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <p\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          className={styles.content}\n        />\n      </Layout>\n    )\n  }\n\n  componentDidMount() {\n    hljs.registerLanguage(\"javascript\", javascript)\n    hljs.initHighlighting()\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport styles from \"./BackButton.module.css\"\n\nfunction BackButton({ to }) {\n  return (\n    <Link className={styles.button} to={to}>\n      {\"<=\"}\n    </Link>\n  )\n}\n\nexport default BackButton\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport BackButton from \"./BackButton\"\n\nimport styles from \"./layout.module.css\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const isRootPath = location.pathname === rootPath\n\n    return (\n      <div className={styles.container}>\n        {!isRootPath && (\n          <BackButton to={\"/\"} />\n        )}\n        <header>\n          <h1 className={styles.title}>\n            <Link className={styles.link} to={`/`}>\n              {isRootPath ? \"Welcome to my blog!\" : title}\n            </Link>\n          </h1>\n        </header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}