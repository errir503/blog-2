{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./node_modules/highlight.js/lib/highlight.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/highlight.js/lib/languages/javascript.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","location","title","frontmatter","description","excerpt","dangerouslySetInnerHTML","__html","html","className","styles","content","componentDidMount","hljs","registerLanguage","javascript","initHighlighting","React","Component","pageQuery","factory","globalObject","API_REPLACES","ArrayProto","objectKeys","Object","keys","languages","aliases","noHighlightRe","languagePrefixRe","fixMarkupRe","spanEndTag","options","classPrefix","tabReplace","useBR","undefined","escape","value","replace","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","test","inherit","parent","key","result","objects","Array","prototype","slice","call","arguments","forEach","obj","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","length","push","event","restoreLanguageApi","langApiRestored","contains","concat","variants","compileLanguage","reStr","source","langRe","global","RegExp","case_insensitive","compileMode","mode","compiled","keywords","beginKeywords","compiled_keywords","flatten","str","split","kw","pair","Number","lexemesRe","lexemes","begin","join","beginRe","endSameAsBegin","end","endsWithParent","endRe","terminator_end","illegal","illegalRe","relevance","apply","map","c","cached_variants","variant","expand_mode","starts","terminators","filter","Boolean","regexps","separator","backreferenceRe","numCaptures","ret","i","substring","String","joinRe","highlight","name","ignore_illegals","continuation","escapeRe","keywordMatch","match_str","hasOwnProperty","buildSpan","classname","insideSpan","leaveOpen","noPrefix","openSpan","processBuffer","top","subLanguage","explicit","mode_buffer","continuations","highlightAuto","processSubLanguage","keyword_match","last_index","lastIndex","substr","processKeywords","startNewMode","create","processLexeme","buffer","new_mode","subMode","skip","excludeBegin","returnBegin","end_mode","endOfMode","endsParent","origin","returnEnd","excludeEnd","isIllegal","Error","getLanguage","current","count","e","message","indexOf","text","languageSubset","second_best","autoDetection","fixMarkup","p1","highlightBlock","block","originalStream","resultNode","_class","classes","parentNode","blockLanguage","document","createElementNS","innerHTML","textContent","original","highlighted","processed","nodeStack","selectStream","open","attributes","a","close","stream","reverse","splice","pop","mergeStreams","prevClassName","currentLang","resultLang","trim","buildClassName","called","blocks","querySelectorAll","lang","disableAutodetect","configure","user_options","initHighlightingOnLoad","addEventListener","alias","listLanguages","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","window","self","exports","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","l","parseInt","that","valueOf","j","constructor","module","KEYWORDS","keyword","literal","built_in","NUMBER","SUBST","HTML_TEMPLATE","CSS_TEMPLATE","TEMPLATE_STRING","PARAMS_CONTAINS"],"mappings":"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","file":"component---src-templates-blog-post-js-34e7fa15f47044b454db.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styles from \"./blog-post.module.css\"\nimport \"highlight.js/styles/default.css\"\nimport \"highlight.js/styles/androidstudio.css\"\nimport hljs from \"highlight.js/lib/highlight\"\nimport javascript from \"highlight.js/lib/languages/javascript\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n\n    return (\n      <Layout location={this.props.location} title={post.frontmatter.title}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <p\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          className={styles.content}\n        />\n      </Layout>\n    )\n  }\n\n  componentDidMount() {\n    hljs.registerLanguage(\"javascript\", javascript)\n    hljs.initHighlighting()\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n(function (factory) {\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window || typeof self === 'object' && self; // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  // `nodeType` is checked to ensure that `exports` is not a HTML element.\n\n  if (typeof exports !== 'undefined' && !exports.nodeType) {\n    factory(exports);\n  } else if (globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({}); // Finally register the global hljs with AMD.\n\n    if (typeof define === 'function' && define.amd) {\n      define([], function () {\n        return globalObject.hljs;\n      });\n    }\n  }\n})(function (hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys; // Global internal variables used within the highlight.js library.\n\n  var languages = {},\n      aliases = {}; // Regular expressions used throughout the highlight.js library.\n\n  var noHighlightRe = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm; // The object will be assigned by the build tool. It used to synchronize API \n  // of external language files with minified version of the highlight.js library.\n\n  var API_REPLACES;\n  var spanEndTag = '</span>'; // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n\n    var classes = block.className + ' ';\n    classes += block.parentNode ? block.parentNode.className : ''; // language-* takes precedence over non-prefixed class names.\n\n    match = languagePrefixRe.exec(classes);\n\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i];\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {\n    // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent) {\n      result[key] = parent[key];\n    }\n\n    objects.forEach(function (obj) {\n      for (key in obj) {\n        result[key] = obj[key];\n      }\n    });\n    return result;\n  }\n  /* Stream merging */\n\n\n  function nodeStream(node) {\n    var result = [];\n\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3) offset += child.nodeValue.length;else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset); // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n\n      return offset;\n    })(node, 0);\n\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n\n      if (original[0].offset !== highlighted[0].offset) {\n        return original[0].offset < highlighted[0].offset ? original : highlighted;\n      }\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n       if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n       ... which is collapsed to:\n      */\n\n\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {\n        return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';\n      }\n\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n\n    return result + escape(value.substr(processed));\n  }\n  /* Initialization */\n\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function (variant) {\n        return inherit(mode, {\n          variants: null\n        }, variant);\n      });\n    }\n\n    return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode];\n  }\n\n  function restoreLanguageApi(obj) {\n    if (API_REPLACES && !obj.langApiRestored) {\n      obj.langApiRestored = true;\n\n      for (var key in API_REPLACES) {\n        obj[key] && (obj[API_REPLACES[key]] = obj[key]);\n      }\n\n      (obj.contains || []).concat(obj.variants || []).forEach(restoreLanguageApi);\n    }\n  }\n\n  function compileLanguage(language) {\n    function reStr(re) {\n      return re && re.source || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(reStr(value), 'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : ''));\n    } // joinRe logically computes regexps.join(separator), but fixes the\n    // backreferences so they continue to match.\n\n\n    function joinRe(regexps, separator) {\n      // backreferenceRe matches an open parenthesis or backreference. To avoid\n      // an incorrect parse, it additionally matches the following:\n      // - [...] elements, where the meaning of parentheses and escapes change\n      // - other escape sequences, so we do not misparse escape sequences as\n      //   interesting elements\n      // - non-matching or lookahead parentheses, which do not capture. These\n      //   follow the '(' with a '?'.\n      var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n      var numCaptures = 0;\n      var ret = '';\n\n      for (var i = 0; i < regexps.length; i++) {\n        var offset = numCaptures;\n        var re = reStr(regexps[i]);\n\n        if (i > 0) {\n          ret += separator;\n        }\n\n        while (re.length > 0) {\n          var match = backreferenceRe.exec(re);\n\n          if (match == null) {\n            ret += re;\n            break;\n          }\n\n          ret += re.substring(0, match.index);\n          re = re.substring(match.index + match[0].length);\n\n          if (match[0][0] == '\\\\' && match[1]) {\n            // Adjust the backreference.\n            ret += '\\\\' + String(Number(match[1]) + offset);\n          } else {\n            ret += match[0];\n\n            if (match[0] == '(') {\n              numCaptures++;\n            }\n          }\n        }\n      }\n\n      return ret;\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled) return;\n      mode.compiled = true;\n      mode.keywords = mode.keywords || mode.beginKeywords;\n\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function flatten(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n\n          str.split(' ').forEach(function (kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') {\n          // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n\n        mode.keywords = compiled_keywords;\n      }\n\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n\n        if (!mode.begin) mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin) mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n        if (mode.end) mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end) mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n\n      if (mode.illegal) mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null) mode.relevance = 1;\n\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function (c) {\n        return expand_mode(c === 'self' ? mode : c);\n      }));\n      mode.contains.forEach(function (c) {\n        compileMode(c, mode);\n      });\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators = mode.contains.map(function (c) {\n        return c.beginKeywords ? '\\\\.?(?:' + c.begin + ')\\\\.?' : c.begin;\n      }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);\n      mode.terminators = terminators.length ? langRe(joinRe(terminators, '|'), true) : {\n        exec: function exec()\n        /*s*/\n        {\n          return null;\n        }\n      };\n    }\n\n    compileMode(language);\n  }\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n   - relevance (int)\n  - value (an HTML string with highlighting markup)\n   */\n\n\n  function highlight(name, value, ignore_illegals, continuation) {\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          if (mode.contains[i].endSameAsBegin) {\n            mode.contains[i].endRe = escapeRe(mode.contains[i].beginRe.exec(lexeme)[0]);\n          }\n\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n\n        return mode;\n      }\n\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan = '<span class=\"' + classPrefix,\n          closeSpan = leaveOpen ? '' : spanEndTag;\n      openSpan += classname + '\">';\n      if (!classname) return insideSpan;\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n      if (!top.keywords) return escape(mode_buffer);\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ? highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined); // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += top.subLanguage != null ? processSubLanguage() : processKeywords();\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className ? buildSpan(mode.className, '', true) : '';\n      top = Object.create(mode, {\n        parent: {\n          value: top\n        }\n      });\n    }\n\n    function processLexeme(buffer, lexeme) {\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n\n          processBuffer();\n\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n\n      if (end_mode) {\n        var origin = top;\n\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n\n          processBuffer();\n\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n\n          if (!top.skip && !top.subLanguage) {\n            relevance += top.relevance;\n          }\n\n          top = top.parent;\n        } while (top !== end_mode.parent);\n\n        if (end_mode.starts) {\n          if (end_mode.endSameAsBegin) {\n            end_mode.starts.endRe = end_mode.endRe;\n          }\n\n          startNewMode(end_mode.starts, '');\n        }\n\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top)) throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n\n    var result = '',\n        current;\n\n    for (current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n\n    var mode_buffer = '';\n    var relevance = 0;\n\n    try {\n      var match,\n          count,\n          index = 0;\n\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match) break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n\n      processLexeme(value.substr(index));\n\n      for (current = top; current.parent; current = current.parent) {\n        // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n   - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n   */\n\n\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function (name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n\n    return result;\n  }\n  /*\n  Post-processing of the highlighted markup:\n   - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n   */\n\n\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function (match, p1) {\n      if (options.useBR && match === '\\n') {\n        return '<br>';\n      } else if (options.tabReplace) {\n        return p1.replace(/\\t/g, options.tabReplace);\n      }\n\n      return '';\n    });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n\n\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n    if (isNotHighlighted(language)) return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n    originalStream = nodeStream(node);\n\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n\n    result.value = fixMarkup(result.value);\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n\n\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n\n\n  function initHighlighting() {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n  /*\n  Attaches highlighting to the page load event.\n  */\n\n\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    restoreLanguageApi(lang);\n\n    if (lang.aliases) {\n      lang.aliases.forEach(function (alias) {\n        aliases[alias] = name;\n      });\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n  /* Interface definition */\n\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit; // Common regexps\n\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~'; // Common modes\n\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]',\n    relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit({\n      className: 'comment',\n      begin: begin,\n      end: end,\n      contains: []\n    }, inherits || {});\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' + '%|em|ex|ch|rem' + '|vw|vh|vmin|vmax' + '|cm|mm|in|pt|pc|px' + '|deg|grad|rad|turn' + '|s|ms' + '|Hz|kHz' + '|dpi|dpcm|dppx' + ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [hljs.BACKSLASH_ESCAPE, {\n      begin: /\\[/,\n      end: /\\]/,\n      relevance: 0,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  return hljs;\n});","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","module.exports = function (hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword: 'in of if for while finally var new function do return void else break catch ' + 'instanceof with throw case default try this switch continue typeof delete ' + 'let yield const export super debugger as async await static ' + // ECMAScript 6 modules import\n    'import from as',\n    literal: 'true false null undefined NaN Infinity',\n    built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' + 'TypeError URIError Number Math Date String RegExp Array Float32Array ' + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' + 'Promise'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(0[bB][01]+)'\n    }, {\n      begin: '\\\\b(0[oO][0-7]+)'\n    }, {\n      begin: hljs.C_NUMBER_RE\n    }],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: [] // defined later\n\n  };\n  var HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'xml'\n    }\n  };\n  var CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'css'\n    }\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n  };\n  SUBST.contains = [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, NUMBER, hljs.REGEXP_MODE];\n  var PARAMS_CONTAINS = SUBST.contains.concat([hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE]);\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [{\n      className: 'meta',\n      relevance: 10,\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    }, {\n      className: 'meta',\n      begin: /^#!/,\n      end: /$/\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBER, {\n      // object attr container\n      begin: /[{,]\\s*/,\n      relevance: 0,\n      contains: [{\n        begin: IDENT_RE + '\\\\s*:',\n        returnBegin: true,\n        relevance: 0,\n        contains: [{\n          className: 'attr',\n          begin: IDENT_RE,\n          relevance: 0\n        }]\n      }]\n    }, {\n      // \"value\" container\n      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n      keywords: 'return throw case',\n      contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {\n        className: 'function',\n        begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>',\n        returnBegin: true,\n        end: '\\\\s*=>',\n        contains: [{\n          className: 'params',\n          variants: [{\n            begin: IDENT_RE\n          }, {\n            begin: /\\(\\s*\\)/\n          }, {\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: PARAMS_CONTAINS\n          }]\n        }]\n      }, {\n        className: '',\n        begin: /\\s/,\n        end: /\\s*/,\n        skip: true\n      }, {\n        // E4X / JSX\n        begin: /</,\n        end: /(\\/[A-Za-z0-9\\\\._:-]+|[A-Za-z0-9\\\\._:-]+\\/)>/,\n        subLanguage: 'xml',\n        contains: [{\n          begin: /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/,\n          skip: true\n        }, {\n          begin: /<[A-Za-z0-9\\\\._:-]+/,\n          end: /(\\/[A-Za-z0-9\\\\._:-]+|[A-Za-z0-9\\\\._:-]+\\/)>/,\n          skip: true,\n          contains: [{\n            begin: /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/,\n            skip: true\n          }, 'self']\n        }]\n      }],\n      relevance: 0\n    }, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: /\\{/,\n      excludeEnd: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        begin: IDENT_RE\n      }), {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        contains: PARAMS_CONTAINS\n      }],\n      illegal: /\\[|%/\n    }, {\n      begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n\n    }, hljs.METHOD_GUARD, {\n      // ES6 class\n      className: 'class',\n      beginKeywords: 'class',\n      end: /[{;=]/,\n      excludeEnd: true,\n      illegal: /[:\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends'\n      }, hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      beginKeywords: 'constructor get set',\n      end: /\\{/,\n      excludeEnd: true\n    }],\n    illegal: /#(?!!)/\n  };\n};"],"sourceRoot":""}