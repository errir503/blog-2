{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/PostList.js","webpack:///./src/components/BlogIndex.js","webpack:///./src/components/PostList.module.css"],"names":["BlogIndex","pageQuery","PostList","posts","title","className","styles","map","index","node","frontmatter","fields","slug","to","post","key","dangerouslySetInnerHTML","__html","description","excerpt","props","data","location","site","siteMetadata","siteUrl","config","useEffect","identify","uniqueId","localStorage","getItem","window","appCues","setTimeout","setItem","Math","random","toString","substr","globalStyles","prefetchLink","allMarkdownRemark","edges","module","exports"],"mappings":"2FAAA,iEAEeA,YAAf,EAEO,IAAMC,EAAS,c,6HCkCPC,MA/Bf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,cACX,6BAASC,UAAWC,IAAOH,OACxBA,EAAMI,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAAC,OAAD,CACEC,GAAIJ,EAAKE,OAAOC,KAChBP,UAAWC,IAAOQ,KAClBV,MAAM,QACNW,IAAKP,GAEL,6BAASO,IAAKN,EAAKE,OAAOC,MACxB,wBAAIP,UAAWC,IAAOF,OAAQA,GAC9B,uBACEY,wBAAyB,CACvBC,OAAQR,EAAKC,YAAYQ,aAAeT,EAAKU,SAE/Cd,UAAWC,IAAOY,sB,YCiCrBlB,IA/Cf,SAAmBoB,GAAQ,IACjBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SADU,EAEWD,EAAKE,KAAKC,aAArCpB,EAFgB,EAEhBA,MAAOqB,EAFS,EAETA,QAASC,EAFA,EAEAA,OAmBxB,OAjBAC,qBAAU,YACS,SAAXC,IACJ,IAAMC,EAAWC,aAAaC,QAAQ,YAEnCF,GAAYG,OAAOC,QACpBD,OAAOC,QAAQL,SAASC,GAChBA,IAAaG,OAAOC,QAC5BC,WAAWN,EAAU,MAErBE,aAAaK,QAfC,WAHb,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAmB5CX,KAIJA,KACC,IAGD,kBAAC,IAAD,CACEN,SAAUA,EACVlB,MAAOA,EACPqB,QAASA,EACTC,OAAQA,GAER,kBAAC,OAAD,CACEb,GAAG,IACHR,UAAWmC,IAAaC,cAF1B,QAMA,kBAAC,OAAD,CACE5B,GAAG,SACHR,UAAWmC,IAAaC,cAF1B,SAMA,kBAAC,EAAD,CACEtC,MAAOkB,EAAKqB,kBAAkBC,W,qBCrDtCC,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,KAAO,+BAA+B,MAAQ,gCAAgC,YAAc,sCAAsC,KAAO","file":"component---src-pages-index-js-420db59efe9751298cf7.js","sourcesContent":["import BlogIndex from '../components/BlogIndex'\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        config: en {\n          rootPath\n          title\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//en/\" } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\n\nimport styles from \"./PostList.module.css\"\n\nfunction PostList({ posts }) {\n  return (\n    <>\n      <SEO title=\"All posts\" />\n      <section className={styles.posts}>\n        {posts.map(({ node }, index) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Link\n              to={node.fields.slug}\n              className={styles.post}\n              title=\"title\"\n              key={index}\n            >\n              <article key={node.fields.slug}>\n                <h3 className={styles.title}>{title}</h3>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                  className={styles.description}\n                />\n              </article>\n            </Link>\n          )\n        })}\n      </section>\n    </>\n  )\n}\n\nexport default PostList\n","import React, { useEffect } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport globalStyles from '../global.module.css'\nimport PostList from \"./PostList\"\nimport Layout from \"./layout\"\n\nconst getUniqueId = function () {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nconst UNIQUE_ID_KEY = 'uniqueId'\n\nfunction BlogIndex(props) {\n  const { data, location } = props\n  const { title, siteUrl, config } = data.site.siteMetadata\n\n  useEffect(() => {\n    const identify = () => {\n      const uniqueId = localStorage.getItem('uniqueId')\n\n      if(uniqueId && window.appCues) {\n        window.appCues.identify(uniqueId)\n      } else if(uniqueId && !window.appCues) {\n        setTimeout(identify, 300)\n      } else {\n        localStorage.setItem(UNIQUE_ID_KEY, getUniqueId())\n        identify();\n      };\n    }\n\n    identify();\n  }, [])\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      siteUrl={siteUrl}\n      config={config}\n    >\n      <Link\n        to=\"/\"\n        className={globalStyles.prefetchLink}\n      >\n        Home\n      </Link>\n      <Link\n        to=\"/pt-br\"\n        className={globalStyles.prefetchLink}\n      >\n        pt-br\n      </Link>\n      <PostList\n        posts={data.allMarkdownRemark.edges}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"PostList-module--posts--2R_sN\",\"post\":\"PostList-module--post--13-tS\",\"title\":\"PostList-module--title--3NqQ3\",\"description\":\"PostList-module--description--39upC\",\"date\":\"PostList-module--date--3Ygsq\"};"],"sourceRoot":""}