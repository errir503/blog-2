{"version":3,"sources":["webpack:///./src/utils/getRandomBg.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BackButton.js","webpack:///./src/components/layout.js"],"names":["getRandomBg","colorsMap","Math","floor","random","length","BlogIndex","render","data","this","props","_data$site$siteMetada","site","siteMetadata","title","siteUrl","posts","allMarkdownRemark","edges","react_default","a","createElement","layout","location","seo","className","styles","map","_ref","node","frontmatter","fields","slug","gatsby_browser_entry","to","post","key","dangerouslySetInnerHTML","__html","description","excerpt","date","style","backgroundColor","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","BackButton","button","Layout","_this$props","children","isRootPath","container","components_BackButton","link"],"mappings":"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","file":"component---src-pages-index-js-2ed0e8613f0dbf10c4d6.js","sourcesContent":["const colorsMap = ['#cf6679', '#3700b3', '#bb86fc', '#03dac6', '#1ca0ee']\n\nconst getRandomBg = (colorsMap) => () => {\n  return colorsMap[Math.floor((Math.random()*colorsMap.length))]\n}\n\nexport default getRandomBg(colorsMap)","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport styles from \"./index.module.css\"\nimport getRandomBg from \"../utils/getRandomBg\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const { title, siteUrl } = data.site.siteMetadata\n\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={title} siteUrl={siteUrl}>\n        <SEO title=\"All posts\" />\n        <section className={styles.posts}>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <Link to={node.fields.slug} className={styles.post}>\n                <article key={node.fields.slug}>\n                  <h3 className={styles.title}>{title}</h3>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                    className={styles.description}\n                  />\n                  <small\n                    className={styles.date}\n                    style={{ backgroundColor: getRandomBg() }}\n                  >\n                    {node.frontmatter.date}\n                  </small>\n                </article>\n              </Link>\n            )\n          })}\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport styles from \"./BackButton.module.css\"\n\nfunction BackButton({ to }) {\n  return (\n    <Link className={styles.button} to={to}>\n      {\"<=\"}\n    </Link>\n  )\n}\n\nexport default BackButton\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport BackButton from \"./BackButton\"\n\nimport styles from \"./layout.module.css\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const isRootPath = location.pathname === rootPath\n\n    return (\n      <div className={styles.container}>\n        {!isRootPath && (\n          <BackButton to={\"/\"} />\n        )}\n        <header>\n          <h1 className={styles.title}>\n            <Link className={styles.link} to={`/`}>\n              {isRootPath ? \"Welcome to my blog!\" : title}\n            </Link>\n          </h1>\n        </header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}